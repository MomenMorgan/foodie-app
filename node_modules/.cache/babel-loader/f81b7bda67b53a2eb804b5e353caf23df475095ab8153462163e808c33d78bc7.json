{"ast":null,"code":"var _jsxFileName = \"/home/morgan/Desktop/foodie-app/src/pages/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useAuth } from \"../pages/TokenContext\";\nimport { Navigate } from \"react-router-dom\";\nimport { useLoaderData } from \"react-router-dom\";\nimport CategoriesList from \"../components/reecipes/CategoriesList\";\nimport mainfruite from \"../assets/images/mainfruite.png\";\nimport RecipesNav from \"../components/reecipes/RecipesNav\";\nimport userProfile from \"../assets/images/userProfile.png\";\nimport Pagenation from \"../components/Pagination\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState } from \"react\";\nimport FetchColllection from \"./FetchColllection\";\nimport CreateCollection from \"./CreateCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  const data = useLoaderData();\n  const [recipesData, setRecipesData] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setpostPerPage] = useState(1);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const [collections, setCollections] = useState(data.profileData.document.collections);\n  const [name, setName] = useState(data.profileData.document.name);\n  const [email, setEmail] = useState(data.profileData.document.email);\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const {\n    token\n  } = useAuth();\n  const updateRecipesData = newData => {\n    setRecipesData(newData);\n  };\n  const fetchUserData = async () => {\n    if (token) {\n      try {\n        const fres = await fetch(\"http://localhost:8080/users\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!fres.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        const fetchedUsersList = await fres.json();\n        setCollections(fetchedUsersList.document.collections);\n        setEmail(fetchedUsersList.document.email);\n        setName(fetchedUsersList.document.name);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    }\n  };\n  useEffect(() => {\n    fetchUserData();\n  }, [token]);\n  const updateCollections = () => {\n    fetchUserData(); // Refetch collections after creation\n  };\n\n  const currentPosts = collections.slice(indexOfFirstPost, indexOfLastPost);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex w-full relative\",\n    children: [/*#__PURE__*/_jsxDEV(CategoriesList, {\n      width: \"w-1/4 \",\n      path: \"category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" w-2/3 \",\n      children: [/*#__PURE__*/_jsxDEV(RecipesNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" mt-4  flex-col justify-center items-center \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userProfile,\n            alt: \"\",\n            className: \" w-1/4 h-1000px  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" mt-4 \",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \" font-mono text-2xl text-center text-green-300 drop-shadow\",\n            children: [name, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleCheck,\n              className: \"text-blue-400 text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center font-extralight text-gray-500\",\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" mt-20 \",\n          children: [/*#__PURE__*/_jsxDEV(CreateCollection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"font-montez text-green-100 text-3xl\",\n            children: \"Collection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FetchColllection, {\n            collections: collections,\n            setRecipesData: setRecipesData,\n            recipesData: recipesData,\n            currentPosts: currentPosts,\n            updateRecipesData: updateRecipesData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagenation, {\n          totalRes: collections.length,\n          postsPerPage: postsPerPage,\n          setCurrentPage: setCurrentPage,\n          currentPage: currentPage,\n          styles: \"absolute right-0 top-20 flex flex-col space-y-2\",\n          name: collections\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mainfruite,\n      alt: \"\",\n      className: \"w-1/4 h-1000px bg-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"gDJ2Z4SpvQPd3UBFZ+skMIZSgvw=\", false, function () {\n  return [useLoaderData, useAuth];\n});\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useAuth","Navigate","useLoaderData","CategoriesList","mainfruite","RecipesNav","userProfile","Pagenation","FontAwesomeIcon","faCircleCheck","useState","FetchColllection","CreateCollection","jsxDEV","_jsxDEV","Profile","_s","data","recipesData","setRecipesData","currentPage","setCurrentPage","postsPerPage","setpostPerPage","indexOfLastPost","collections","setCollections","profileData","document","name","setName","email","setEmail","indexOfFirstPost","token","updateRecipesData","newData","fetchUserData","fres","fetch","headers","Authorization","ok","Error","fetchedUsersList","json","error","console","updateCollections","currentPosts","slice","className","children","width","path","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","icon","totalRes","length","styles","_c","$RefreshReg$"],"sources":["/home/morgan/Desktop/foodie-app/src/pages/Profile.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useAuth } from \"../pages/TokenContext\";\nimport { Navigate } from \"react-router-dom\";\nimport { useLoaderData } from \"react-router-dom\";\nimport CategoriesList from \"../components/reecipes/CategoriesList\";\nimport mainfruite from \"../assets/images/mainfruite.png\";\nimport RecipesNav from \"../components/reecipes/RecipesNav\";\nimport userProfile from \"../assets/images/userProfile.png\";\nimport Pagenation from \"../components/Pagination\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState } from \"react\";\nimport FetchColllection from \"./FetchColllection\";\nimport CreateCollection from \"./CreateCollection\";\n\nexport default function Profile() {\n  const data = useLoaderData();\n  const [recipesData, setRecipesData] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setpostPerPage] = useState(1);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const [collections, setCollections] = useState(\n    data.profileData.document.collections\n  );\n  const [name, setName] = useState(\n    data.profileData.document.name\n  );\n  const [email, setEmail] = useState(\n    data.profileData.document.email\n  );\n\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n\n  const { token } = useAuth();\n\n  const updateRecipesData = (newData) => {\n    setRecipesData(newData);\n  };\n\n  \n  const fetchUserData = async () => {\n    if (token) {\n      try {\n        const fres = await fetch(\"http://localhost:8080/users\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!fres.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        const fetchedUsersList = await fres.json();\n        setCollections(fetchedUsersList.document.collections);\n        setEmail(fetchedUsersList.document.email)\n        setName(fetchedUsersList.document.name)\n\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchUserData();\n  }, [token]);\n\n  const updateCollections = () => {\n    fetchUserData(); // Refetch collections after creation\n  };\n\n  const currentPosts = collections.slice(indexOfFirstPost, indexOfLastPost);\n\n  return (\n    <div className=\"flex w-full relative\">\n      <CategoriesList width={\"w-1/4 \"} path={\"category\"} />\n      <div className=\" w-2/3 \">\n        <RecipesNav />\n        <div className=\" mt-4  flex-col justify-center items-center \">\n          <div className=\"w-full flex justify-center\">\n            <img src={userProfile} alt=\"\" className=\" w-1/4 h-1000px  \" />\n          </div>\n          <div className=\" mt-4 \">\n            <h2 className=\" font-mono text-2xl text-center text-green-300 drop-shadow\">\n              {name}{\" \"}\n              <FontAwesomeIcon\n                icon={faCircleCheck}\n                className=\"text-blue-400 text-xl\"\n              />\n            </h2>\n            <h3 className=\"text-center font-extralight text-gray-500\">\n              {email}\n            </h3>\n          </div>\n\n          <div className=\" mt-20 \">\n            <CreateCollection />\n            <h1 className=\"font-montez text-green-100 text-3xl\">Collection</h1>\n            <FetchColllection\n              collections={collections}\n              setRecipesData={setRecipesData}\n              recipesData={recipesData}\n              currentPosts={currentPosts}\n              updateRecipesData={updateRecipesData}\n            />\n          </div>\n          <Pagenation\n            totalRes={collections.length}\n            postsPerPage={postsPerPage}\n            setCurrentPage={setCurrentPage}\n            currentPage={currentPage}\n            styles=\"absolute right-0 top-20 flex flex-col space-y-2\"\n            name={collections}\n          />\n        </div>\n      </div>\n      <img src={mainfruite} alt=\"\" className=\"w-1/4 h-1000px bg-\" />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}