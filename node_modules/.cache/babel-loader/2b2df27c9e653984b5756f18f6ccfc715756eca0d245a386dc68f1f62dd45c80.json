{"ast":null,"code":"//categories list and all recipes\n\nexport const catLoader = async () => {\n  const res = await fetch(\"http://localhost:8080/categories\");\n  if (!res.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const categoriesList = await res.json();\n  const secondRes = await fetch(\"http://localhost:8080/recipes\");\n  if (!secondRes.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const recipesList = await secondRes.json();\n  return {\n    categoriesList,\n    recipesList\n  };\n};\n\n//Categories Details\n\nexport const catDetailsLoader = async ({\n  params\n}) => {\n  const {\n    id\n  } = params;\n  const res = await fetch(\"http://localhost:8080/categories/\" + id);\n  if (!res.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const catDetailsData = await res.json();\n  const sres = await fetch(`http://localhost:8080/categories/${id}/recipes`);\n  if (!sres.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const additionalData = await sres.json();\n  const tres = await fetch(\"http://localhost:8080/categories\");\n  if (!tres.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const categoriesList = await tres.json();\n  const fres = await fetch(\"http://localhost:8080/subcategories\");\n  if (!fres.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const subCategories = await fres.json();\n  return {\n    document: catDetailsData,\n    additionalData,\n    categoriesList,\n    subCategories\n  };\n};\n\n// Recipes Details\n\nexport const recipeDetailsLoader = async ({\n  params\n}) => {\n  const {\n    id\n  } = params;\n  const res = await fetch(\"http://localhost:8080/recipes/\" + id);\n  if (!res.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const catDetailsData = await res.json();\n  const category = catDetailsData.document.category;\n  const sres = await fetch(`http://localhost:8080/categories/${category}/recipes`);\n  if (!sres.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const additionalData = await sres.json();\n  const tres = await fetch(\"http://localhost:8080/categories\");\n  if (!tres.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const categoriesList = await tres.json();\n  return {\n    document: catDetailsData,\n    additionalData,\n    categoriesList\n  };\n};\n\n//Profile Loader\n\nconst profileLoader = async () => {};","map":{"version":3,"names":["catLoader","res","fetch","ok","Error","categoriesList","json","secondRes","recipesList","catDetailsLoader","params","id","catDetailsData","sres","additionalData","tres","fres","subCategories","document","recipeDetailsLoader","category","profileLoader"],"sources":["/home/morgan/Desktop/foodie-app/src/components/reecipes/loader.js"],"sourcesContent":["//categories list and all recipes\n\nexport const catLoader = async () => {\n  const res = await fetch(\"http://localhost:8080/categories\");\n\n  if (!res.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const categoriesList = await res.json();\n\n  const secondRes = await fetch(\"http://localhost:8080/recipes\");\n  if (!secondRes.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const recipesList = await secondRes.json();\n\n  return {\n    categoriesList,\n    recipesList,\n  };\n};\n\n//Categories Details\n\nexport const catDetailsLoader = async ({ params }) => {\n  const { id } = params;\n  const res = await fetch(\"http://localhost:8080/categories/\" + id);\n  if (!res.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const catDetailsData = await res.json();\n\n  const sres = await fetch(`http://localhost:8080/categories/${id}/recipes`);\n  if (!sres.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const additionalData = await sres.json();\n\n  const tres = await fetch(\"http://localhost:8080/categories\");\n\n  if (!tres.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const categoriesList = await tres.json();\n\n  const fres = await fetch(\"http://localhost:8080/subcategories\");\n\n  if (!fres.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const subCategories = await fres.json();\n\n  return {\n    document: catDetailsData,\n    additionalData,\n    categoriesList,\n    subCategories\n  };\n};\n\n// Recipes Details\n\nexport const recipeDetailsLoader = async ({ params }) => {\n  const { id } = params;\n  const res = await fetch(\"http://localhost:8080/recipes/\" + id);\n  if (!res.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n\n  const catDetailsData = await res.json();\n  const category = catDetailsData.document.category;\n\n  const sres = await fetch(\n    `http://localhost:8080/categories/${category}/recipes`\n  );\n  if (!sres.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const additionalData = await sres.json();\n\n  const tres = await fetch(\"http://localhost:8080/categories\");\n\n  if (!tres.ok) {\n    throw new Error(\"Something went wrong\");\n  }\n  const categoriesList = await tres.json();\n\n  return {\n    document: catDetailsData,\n    additionalData,\n    categoriesList,\n  };\n};\n\n\n\n//Profile Loader\n\nconst profileLoader = async () => {\n\n\n  \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}