{"ast":null,"code":"var _jsxFileName = \"/home/morgan/Desktop/foodie-app/src/components/auth/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport TopBar from \"../TopBar\";\nimport Mainbar from \"../Mainbar\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminPanel() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n\n  // Function to fetch recipes based on the search term\n  const fetchRecipes = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/recipes?name=${searchTerm}`);\n      const data = await response.json();\n      console.log(data);\n      setRecipes(data); // Assuming the API returns an array of recipes\n    } catch (error) {\n      console.error('Error fetching recipes:', error);\n    }\n  };\n\n  // Update filtered recipes when the search term or recipes change\n  useEffect(() => {\n    setFilteredRecipes(\n      //     recipes.filter(recipe => recipe.name.toLowerCase().includes(searchTerm.toLowerCase()))\n    );\n  }, [searchTerm, recipes]);\n\n  // Handle input change\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Mainbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for recipes...\",\n      value: searchTerm,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchRecipes,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredRecipes.map(recipe => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: recipe.name\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n      // Render other recipe details as needed\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 11\n  }, this);\n}\n_s(AdminPanel, \"Il/q8Lg/4lebfw8RTQcsNLgnVRE=\");\n_c = AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","TopBar","Mainbar","useState","useEffect","jsxDEV","_jsxDEV","AdminPanel","_s","searchTerm","setSearchTerm","recipes","setRecipes","filteredRecipes","setFilteredRecipes","fetchRecipes","response","fetch","data","json","console","log","error","handleInputChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","recipe","name","id","_c","$RefreshReg$"],"sources":["/home/morgan/Desktop/foodie-app/src/components/auth/AdminPanel.js"],"sourcesContent":["import React from \"react\";\nimport TopBar from \"../TopBar\";\nimport Mainbar from \"../Mainbar\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nexport default function AdminPanel() {\n\n\n        const [searchTerm, setSearchTerm] = useState('');\n        const [recipes, setRecipes] = useState([]);\n        const [filteredRecipes, setFilteredRecipes] = useState([]);\n      \n        // Function to fetch recipes based on the search term\n        const fetchRecipes = async () => {\n          try {\n            const response = await fetch(`http://localhost:8080/recipes?name=${searchTerm}`);\n            const data = await response.json();\n            console.log(data)\n            setRecipes(data); // Assuming the API returns an array of recipes\n          } catch (error) {\n            console.error('Error fetching recipes:', error);\n          }\n        };\n      \n        // Update filtered recipes when the search term or recipes change\n        useEffect(() => {\n          setFilteredRecipes(\n        //     recipes.filter(recipe => recipe.name.toLowerCase().includes(searchTerm.toLowerCase()))\n          );\n        }, [searchTerm, recipes]);\n      \n        // Handle input change\n        const handleInputChange = event => {\n          setSearchTerm(event.target.value);\n        };\n      \n        return (\n          <div>\n                <div>\n                        <TopBar />\n                        <Mainbar />\n                </div>\n            <input\n              type=\"text\"\n              placeholder=\"Search for recipes...\"\n              value={searchTerm}\n              onChange={handleInputChange}\n            />\n            <button onClick={fetchRecipes}>Search</button>\n      \n            <ul>\n              {filteredRecipes.map(recipe => (\n                <li key={recipe.id}>{recipe.name}</li>\n                // Render other recipe details as needed\n              ))}\n            </ul>\n          </div>\n        );\n      }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAG7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCR,UAAW,EAAC,CAAC;MAChF,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBN,UAAU,CAACM,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACdU,kBAAkB;MACpB;IAAA,CACG;EACH,CAAC,EAAE,CAACL,UAAU,EAAEE,OAAO,CAAC,CAAC;;EAEzB;EACA,MAAMY,iBAAiB,GAAGC,KAAK,IAAI;IACjCd,aAAa,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACMrB,OAAA;MAAAqB,QAAA,gBACQrB,OAAA,CAACL,MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVzB,OAAA,CAACJ,OAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACVzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,uBAAuB;MACnCP,KAAK,EAAEjB,UAAW;MAClByB,QAAQ,EAAEX;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFzB,OAAA;MAAQ6B,OAAO,EAAEpB,YAAa;MAAAY,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE9CzB,OAAA;MAAAqB,QAAA,EACGd,eAAe,CAACuB,GAAG,CAACC,MAAM,iBACzB/B,OAAA;QAAAqB,QAAA,EAAqBU,MAAM,CAACC;MAAI,GAAvBD,MAAM,CAACE,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB;MACrC;MACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACvB,EAAA,CArDiBD,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}